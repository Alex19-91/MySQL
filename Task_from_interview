-- Создание БД под задание

drop database if exists business_trips;
create database business_trips;
use business_trips;

-- Названия департаментов, их руководители

drop table if exists departments;
create table departments(
	id serial primary key,
	name_of_department varchar(20),
	name_of_chef varchar(20)

);

-- Города, также их классификация как заграничные

drop table if exists cities;
create table cities(
	id serial primary key,
	city varchar(20),
	is_foreign bit(1) default 0


);

-- Работники. Имена, дата найма, срок действия паспорта,  классификация работников как уволенных (1-да, 0 - нет)

drop table if exists employees;
create table employees(
	id serial primary key,
	name varchar(30),
	hired_in date,
	passport_till date,
	dep_name_id bigint unsigned not null,
	is_fired bit(1) default 0,
	
	foreign key (dep_name_id) references departments(id)
);
	
-- Командировки. Связи с таблицами: города, департаменты, работники; даты командировок.

drop table if exists trips;
create table trips(
	id serial primary key,
	city_id bigint unsigned not null,
	department_id bigint unsigned not null,
	employee_id bigint unsigned not null,
	date_of_trip date,
	
	foreign key (city_id) references cities(id),
	foreign key (department_id) references departments(id),
	foreign key (employee_id) references employees(id)
);


	



 -- 1. Вывести список подразделений, чьи сотрудники были в командировке в 2020 в Уфе более 10 раз.
select name_of_department, count(*) as trips_in_ufa from departments where id in(
	select department_id from trips inner join cities on trips.city_id = cities.id 
	where year(date_of_trip) = 2020 and  city = 'Ufa' ) group by name_of_department HAVING trips_in_ufa > 10
;
/*
2. Вывести список сотрудников, подразделение и его руководителя, которые в 2019-2020 году
были в заграничных командировках, и у которых заканчивается загран паспорт в 2020 году.
*/

select name, name_of_department, name_of_chef from departments right join employees on departments.id = employees.dep_name_id
where year(passport_till) = 2020 and departments.id in(
	select employee_id from trips left join cities on trips.city_id = cities.id 
	where is_foreign = 1 and (year(date_of_trip) = 2019 or year(date_of_trip) = 2020))
	;
/*
3. Найти подразделение, чьи сотрудники, пришедшие на предприятие в 2020 году и не
уволившиеся в настоящее время
a) были больше всего в командировках
*/

select name_of_department, count(name) as number_trips from departments right join employees on departments.id = employees.dep_name_id
where year(hired_in) = 2020 and is_fired = 0 and employees.id  in(
	select employee_id from trips) group by name_of_department  order by number_trips;

-- б) никогда не были в командировках

select name_of_department from departments right join employees on departments.id = employees.dep_name_id
where year(hired_in) = 2020 and is_fired = 0 and employees.id not in(
	select employee_id from trips) group by name_of_department
;
